/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apk_fuzzy;

import static apk_fuzzy.proses.tb_rules;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    int i=0;
    String satuann;
    List<List>data = new ArrayList<>();
    List<List>input_data = new ArrayList<>();
    List<List>output_data = new ArrayList<>();
    
    class btn_klik implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            String var = tf_nm_var.getText();
            String min_varr = tf_min_var.getText();
            String max_varr = tf_max_var.getText();
            satuann = tf_satuan.getText();
            String tipe = tf_tipe.getText();
            if (e.getSource() == btn_tambah){
                if(var.equals("")||min_varr.equals("")||max_varr.equals("")||satuann.equals("")||tf_min_val.getText()==""||tf_max_val.getText()==""){
                     JOptionPane.showMessageDialog(null, "Isi Data Dengan Benar"); 
                }else
                {
                    tb_data(); 
                    int min_vall = Integer.parseInt(tf_min_val.getText());
                    int max_vall = Integer.parseInt(tf_max_val.getText());
                    i=i+1;
                    data.add(Arrays.asList(tipe,var,min_varr,min_vall,max_varr,max_vall));
                    
                    if(tf_tipe.getText().equals("Input"))
                    {
                        input_data.add(Arrays.asList(tipe,var,min_varr,min_vall,max_varr,max_vall));
                    }else if(tf_tipe.getText().equals("Output"))
                    {
                        output_data.add(Arrays.asList(tipe,var,min_varr,min_vall,max_varr,max_vall));
                    }
                    clear();
                    kondisi_data();
                }
            }else if(e.getSource() == btn_aturan)
            {
                tb_aturan();
                btn_next.setEnabled(true);
                btn_aturan.setEnabled(false);
            }else if(e.getSource() == btn_next)
            {
                proses p = new proses();
                String input1 = null;
                String input2 = null;
                for(int i = 0;i<input_data.size();i++)
                {
                    if(i==0)
                    {
                        input1 = (String) input_data.get(i).get(1);
                    }else if(i==1)
                    {
                        input2 = (String) input_data.get(i).get(1);
                    }
                }
                p.lbl_input1.setText(input1);
                p.lbl_input2.setText(input2);
                
                
                tb_data_proses();
                tb_aturan_proses();
                p.setVisible(true);
            }
        }
   }
        
    public main() {
        String tampilan = javax.swing.UIManager.getSystemLookAndFeelClassName();
        try{
            javax.swing.UIManager.setLookAndFeel(tampilan);
        }catch(Exception e){}
        initComponents();
        btn_klik btn = new btn_klik();
        btn_tambah.addActionListener(btn);
        btn_aturan.addActionListener(btn);
        btn_next.addActionListener(btn);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        navbar_pnl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        main_pnl = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_nm_var = new javax.swing.JTextField();
        tf_tipe = new javax.swing.JTextField();
        tf_satuan = new javax.swing.JTextField();
        tf_min_var = new javax.swing.JTextField();
        tf_min_val = new javax.swing.JTextField();
        tf_max_var = new javax.swing.JTextField();
        tf_max_val = new javax.swing.JTextField();
        btn_next = new javax.swing.JButton();
        btn_tambah = new javax.swing.JButton();
        btn_aturan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_data = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_aturan = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        navbar_pnl.setBackground(new java.awt.Color(0, 153, 153));
        navbar_pnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("APK FUZZY 152017113 - 152017121 - 152017126");
        navbar_pnl.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 50));

        main_pnl.setBackground(new java.awt.Color(255, 255, 255));
        main_pnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Tabel Aturan");
        main_pnl.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, -1, -1));

        jLabel2.setText("Nama Variabel");
        main_pnl.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, -1));

        jLabel3.setText("Tipe Variabel");
        main_pnl.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, -1));

        jLabel4.setText("Nilai min Variabel");
        main_pnl.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, -1, -1));

        jLabel5.setText("Nilai min Value");
        main_pnl.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, -1, -1));

        jLabel6.setText("Nilai max Variabel");
        main_pnl.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, -1, -1));

        jLabel7.setText("Nilai max Value");
        main_pnl.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, -1, -1));

        jLabel8.setText("Satuan");
        main_pnl.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, -1, -1));

        tf_nm_var.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_nm_varKeyTyped(evt);
            }
        });
        main_pnl.add(tf_nm_var, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 180, 20));

        tf_tipe.setText("Input");
        tf_tipe.setEnabled(false);
        main_pnl.add(tf_tipe, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 180, 20));

        tf_satuan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_satuanKeyTyped(evt);
            }
        });
        main_pnl.add(tf_satuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, 180, 20));

        tf_min_var.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_min_varKeyTyped(evt);
            }
        });
        main_pnl.add(tf_min_var, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, 180, 20));

        tf_min_val.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_min_valKeyTyped(evt);
            }
        });
        main_pnl.add(tf_min_val, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 180, 20));

        tf_max_var.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_max_varKeyTyped(evt);
            }
        });
        main_pnl.add(tf_max_var, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, 180, 20));

        tf_max_val.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_max_valKeyTyped(evt);
            }
        });
        main_pnl.add(tf_max_val, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 150, 180, 20));

        btn_next.setText("Next");
        btn_next.setEnabled(false);
        main_pnl.add(btn_next, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 80, -1));

        btn_tambah.setText("Tambah");
        main_pnl.add(btn_tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 80, -1));

        btn_aturan.setText("Aturan");
        btn_aturan.setEnabled(false);
        main_pnl.add(btn_aturan, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 80, -1));

        tb_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Jenis", "Variabel", "Variabel Min", "Value Min", "Variabel Max", "Value Max", "Satuan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb_data);
        if (tb_data.getColumnModel().getColumnCount() > 0) {
            tb_data.getColumnModel().getColumn(0).setResizable(false);
            tb_data.getColumnModel().getColumn(0).setPreferredWidth(40);
            tb_data.getColumnModel().getColumn(1).setResizable(false);
            tb_data.getColumnModel().getColumn(2).setResizable(false);
            tb_data.getColumnModel().getColumn(3).setResizable(false);
            tb_data.getColumnModel().getColumn(4).setResizable(false);
            tb_data.getColumnModel().getColumn(5).setResizable(false);
            tb_data.getColumnModel().getColumn(6).setResizable(false);
        }

        main_pnl.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 480, 170));

        tb_aturan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Index", "Sebab", "Akibat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tb_aturan);
        if (tb_aturan.getColumnModel().getColumnCount() > 0) {
            tb_aturan.getColumnModel().getColumn(0).setResizable(false);
            tb_aturan.getColumnModel().getColumn(0).setPreferredWidth(20);
            tb_aturan.getColumnModel().getColumn(1).setResizable(false);
            tb_aturan.getColumnModel().getColumn(1).setPreferredWidth(200);
            tb_aturan.getColumnModel().getColumn(2).setResizable(false);
            tb_aturan.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        main_pnl.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 240, 440, 170));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Input Data Variabel");
        main_pnl.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Tabel Data Variabel");
        main_pnl.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, -1, -1));

        navbar_pnl.add(main_pnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 980, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navbar_pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(navbar_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tf_nm_varKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_nm_varKeyTyped
        // TODO add your handling code here:
        filterangka(evt);
    }//GEN-LAST:event_tf_nm_varKeyTyped

    private void tf_min_varKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_min_varKeyTyped
        // TODO add your handling code here:
        filterangka(evt);
    }//GEN-LAST:event_tf_min_varKeyTyped

    private void tf_max_varKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_max_varKeyTyped
        // TODO add your handling code here:
        filterangka(evt);
    }//GEN-LAST:event_tf_max_varKeyTyped

    private void tf_satuanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_satuanKeyTyped
        // TODO add your handling code here:
        filterangka(evt);
    }//GEN-LAST:event_tf_satuanKeyTyped

    private void tf_min_valKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_min_valKeyTyped
        // TODO add your handling code here:
        filterhuruf(evt);
    }//GEN-LAST:event_tf_min_valKeyTyped

    private void tf_max_valKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_max_valKeyTyped
        // TODO add your handling code here:
        filterhuruf(evt);
    }//GEN-LAST:event_tf_max_valKeyTyped

    private void tb_data_proses(){
        for(int i = 0;i<data.size();i++)
        {
            proses.tb_data(new Object[]{
                data.get(i).get(0),
                data.get(i).get(1),
                data.get(i).get(2),
                data.get(i).get(3),
                data.get(i).get(4),
                data.get(i).get(5),
                satuann
            });
        }
    }
    private void tb_aturan_proses(){
        int j=0,k=0;
        String aturan1,aturan2,hsl_aturan;
                
        for(int i = 0;i<4;i++)
        {
            String index = "R"+(i+1);
            if(i%2==0)
            {
                k=k+2;
                aturan1 = input_data.get(j).get(1)+" "+input_data.get(j).get(k);
                aturan2 = input_data.get(j+1).get(1)+" "+input_data.get(j+1).get(2);
                hsl_aturan = output_data.get(j).get(1)+" "+output_data.get(j).get(k);
                
            }else{
                aturan1 = input_data.get(j).get(1)+" "+input_data.get(j).get(k);
                aturan2 = input_data.get(j+1).get(1)+" "+input_data.get(j+1).get(4);
                hsl_aturan = output_data.get(j).get(1)+" "+output_data.get(j).get(k);
            }
            String aturan = aturan1+" DAN "+aturan2;
            proses.tb_aturan(new Object[] {
                index,
                aturan,
                hsl_aturan
            });
        }
    }
    
    private void tb_data(){
        DefaultTableModel mode = (DefaultTableModel) tb_data.getModel();
        mode.addRow(new Object[]{
            tf_tipe.getText(),
            tf_nm_var.getText(),
            tf_min_var.getText(),
            tf_min_val.getText(),
            tf_max_var.getText(),
            tf_max_val.getText(),
            satuann
        });
    }
    
    private void tb_aturan(){
        DefaultTableModel mode = (DefaultTableModel) tb_aturan.getModel();
        int j=0,k=0;
        String aturan1,aturan2,hsl_aturan;
                
        for(int i = 0;i<4;i++)
        {
            String index = "R"+(i+1);
            if(i%2==0)
            {
                k=k+2;
                aturan1 = input_data.get(j).get(1)+" "+input_data.get(j).get(k);
                aturan2 = input_data.get(j+1).get(1)+" "+input_data.get(j+1).get(2);
                hsl_aturan = output_data.get(j).get(1)+" "+output_data.get(j).get(k);
                
            }else{
                aturan1 = input_data.get(j).get(1)+" "+input_data.get(j).get(k);
                aturan2 = input_data.get(j+1).get(1)+" "+input_data.get(j+1).get(4);
                hsl_aturan = output_data.get(j).get(1)+" "+output_data.get(j).get(k);
            }
            String aturan = ""+aturan1+" DAN "+aturan2;
            mode.addRow(new Object[] {
                index,
                aturan,
                hsl_aturan
            });
        }
    }
    
    private void kondisi_data()
    {
        tf_satuan.setEnabled(false);
        if(i>1)
        {
            tf_tipe.setText("Output");
        }else{
            tf_tipe.setText("Input");
        }
        if(i>2){
            btn_tambah.setEnabled(false);
            btn_aturan.setEnabled(true);
        }
    }
    
    private void clear()
    {
        tf_nm_var.setText("");
        tf_min_var.setText("");
        tf_min_val.setText("");
        tf_max_var.setText("");
        tf_max_val.setText("");
    }
    
    void filterhuruf(KeyEvent a){
        if(Character.isAlphabetic(a.getKeyChar())){
            a.consume();
        }
    }
    
    void filterangka(KeyEvent b){
        if(Character.isDigit(b.getKeyChar())){
            b.consume();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aturan;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel main_pnl;
    private javax.swing.JPanel navbar_pnl;
    private static javax.swing.JTable tb_aturan;
    private static javax.swing.JTable tb_data;
    private javax.swing.JTextField tf_max_val;
    private javax.swing.JTextField tf_max_var;
    private javax.swing.JTextField tf_min_val;
    private javax.swing.JTextField tf_min_var;
    private javax.swing.JTextField tf_nm_var;
    private javax.swing.JTextField tf_satuan;
    private javax.swing.JTextField tf_tipe;
    // End of variables declaration//GEN-END:variables
}
